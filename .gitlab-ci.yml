# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: ubuntu:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - node_modules/
  
before_script:
  - apt update -y
  - apt install -y curl
  - curl -sL https://deb.nodesource.com/setup_10.x | bash -
  - apt update -y
  - apt install -y nodejs
  
stages:
  - test
  - deploy pages
  - deploy web

test:
  script:
   - npm install
   # TODO: Run tests here
   - echo "Testing..."

# Job name for gitlab to recognise this results in assets for Gitlab Pages
# https://docs.gitlab.com/ee/user/project/pages/introduction.html#gitlab-pages-requirements
pages:
  stage: deploy pages
  variables:
    PUBLIC_URL: /portfolio
  script:
    - npm install # Install all dependencies
    - npm run build --prod # Build for production
    - rm -rf public # CRA and gitlab pages both use the public folder. Only do this in a build pipeline.
    - mv build public # Move build files to public dir for Gitlab Pages
  artifacts:
    paths:
    - public # The built files for Gitlab Pages to serve
  only:
    - master # Only run on master branch

web:
  stage: deploy web
  script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt update -y && apt install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Assuming you created the SSH_KNOWN_HOSTS variable, uncomment the
    ## following two lines.
    ##
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ##
    ## Install dependencies and build the production site
    ##
    - npm install # Install all dependencies
    - npm run build --prod # Build for production

    - ssh web@vondenstein.com "rm -rf ~/build/"
    - scp -r build/ web@vondenstein.com:~/build/
  artifacts:
    paths:
    - build
  when: manual

